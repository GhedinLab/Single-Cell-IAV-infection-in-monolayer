###### Bulk RNA-seq and Virus Stock Sequencing Data Processing Pipeline ######

#### Bulk RNA-seq Data ####
## 1. Trimmomatic trimming of raw fastq reads to remove adaptors and trim off low quality bases ##
module load trimmomatic/0.36
cd /scratch/cw2505/GhedinLab/Nov_bulkRNA-seq_A549_HBEpC/
java -jar $TRIMMOMATIC_JAR PE -phred33 -threads 10 \
  data/HWNGLBGX3_n01_a549_mock_1.fastq \
  data/HWNGLBGX3_n02_a549_mock_1.fastq \
  1_trimmomatic_trimmed_data/A549_Mock_1_R1.fastq \
  1_trimmomatic_trimmed_data/A549_Mock_1_Unpaired_R1.fastq \
  1_trimmomatic_trimmed_data/A549_Mock_1_R2.fastq \
  1_trimmomatic_trimmed_data/A549_Mock_1_Unpaired_R2.fastq \
  ILLUMINACLIP:/share/apps/trimmomatic/0.36/adapters/TruSeq3-PE-2.fa:2:30:10 \
  SLIDINGWINDOW:4:15 MINLEN:36

## 2. STAR alignment to the concatenated human and virus references ##
module load star/intel/2.5.3a
cd /scratch/cw2505/GhedinLab/Nov_bulkRNA-seq_A549_HBEpC/
mkdir 2_STAR_alignment/A549_Mock_1
STAR --runThreadN 10 \
	--genomeDir /scratch/cw2505/GhedinLab/references/hg19_PR8segs_ref-STAR_07252017 \
	--readFilesIn 1_trimmomatic_trimmed_data/A549_Mock_1_R1.fastq 1_trimmomatic_trimmed_data/A549_Mock_1_R2.fastq \
	--outFileNamePrefix 2_STAR_alignment/A549_Mock_1/A549_Mock_1. \
	--outSAMtype BAM Unsorted

## 3. Gene expression qualification with featureCounts ##
module load subread/intel/1.5.1
cd /scratch/cw2505/GhedinLab/Nov_bulkRNA-seq_A549_HBEpC/3_featureCount_STARalignment
featureCounts -p -B -C -T 10 -t exon -g gene_id \
  -a /scratch/cw2505/GhedinLab/references/hg19_PR8segs_annotation.gtf \
  -o BulkRNA_Run1_counts.txt \
  ../2_STAR_alignment/*/*.Aligned.out.bam

## 4. RNA-seq QC with RSeQC ##
module load samtools/intel/1.3.1
module load rseqc/intel/2.6.4
module load r/intel/3.3.2
cd /scratch/cw2505/GhedinLab/Nov_bulkRNA-seq_A549_HBEpC/
mkdir 4_RSeQC_STARalignment
samtools sort 2_STAR_alignment/A549_Mock_1/A549_Mock_1.Aligned.out.bam > 2_STAR_alignment/A549_Mock_1/A549_Mock_1.Aligned.out.sorted.bam
samtools index 2_STAR_alignment/A549_Mock_1/A549_Mock_1.Aligned.out.sorted.bam
samtools view -h \
  -o 2_STAR_alignment/A549_Mock_1/A549_Mock_1.Aligned.out.sorted.bam.sam \
  2_STAR_alignment/A549_Mock_1/A549_Mock_1.Aligned.out.sorted.bam
mkdir 4_RSeQC_STARalignment/A549_Mock_1
cd 4_RSeQC_STARalignment/A549_Mock_1
read_distribution.py -i ../../2_STAR_alignment/A549_Mock_1/A549_Mock_1.Aligned.out.sorted.bam \
  -r /scratch/cw2505/GhedinLab/references/hg19_GENCODE_v14_forRSeQC.bed
read_duplication.py -i ../../2_STAR_alignment/A549_Mock_1/A549_Mock_1.Aligned.out.sorted.bam \
  -o A549_Mock_1.Duplication
read_GC.py -i ../../2_STAR_alignment/A549_Mock_1/A549_Mock_1.Aligned.out.sorted.bam -o A549_Mock_1.GC
read_quality.py -i ../../2_STAR_alignment/A549_Mock_1/A549_Mock_1.Aligned.out.sorted.bam -o A549_Mock_1.Read_Qality

## 5. Insert size estimation with Picard ##
module load picard/2.8.2
module load r/intel/3.3.2
cd /scratch/cw2505/GhedinLab/Nov_bulkRNA-seq_A549_HBEpC
java -jar /share/apps/picard/2.8.2/picard-2.8.2.jar \
  CollectInsertSizeMetrics \
  I=2_STAR_alignment/A549_Mock_1/A549_Mock_1.Aligned.out.sorted.bam \
  O=8_picard_insert_size/A549_Mock_1_STARalignment_insert_size_metrics.txt \
  H=8_picard_insert_size/A549_Mock_1_STARalignment_insert_size_histogram.pdf \
  M=0.5

## 6. TPM/FPKM calculation (if normalized to the host mRNA pool) ##
python TPM-FPKM_calculation.py \
  --counts BulkRNAseq_count_20samples_input-for-FPKMcal.csv \
  --lengths BulkRNAseq_GeneLength.csv \
  --meanfsize BulkRNAseq_insert-size.csv \
  --output1_TPM BulkRNAseq_count_20samples_TPM_all-norm2host.csv \
  --output2_FPKM BulkRNAseq_count_20samples_FPKM_all-norm2host.csv \
  --skip 8

## 7. Visualization of viral reads percentage and Differential expression with DESeq2 and edgeR ##
# R script #
BulkData_DEanalysis.Rmd



#### Virus stock sequencing data ####
## 1. Trimmomatic trimming of raw fastq reads to remove adaptors and trim off low quality bases ##
module load trimmomatic/0.36
cd /scratch/cw2505/GhedinLab/PR8_PP1A_P2_stock_sequencing
java -jar $TRIMMOMATIC_JAR PE -phred33 -threads 10 \
  HW23FBCXY_l02n01_s2_pr8_cw_rr.351000000a93b3.fastq \
  HW23FBCXY_l02n02_s2_pr8_cw_rr.352000000a93b0.fastq \
  PR8_PP1A_P2_stock_P1.fastq \
  PR8_PP1A_P2_stock_Unpaired_P1.fastq \
  PR8_PP1A_P2_stock_P2.fastq \
  PR8_PP1A_P2_stock_Unpaired_P2.fastq \
  ILLUMINACLIP:/share/apps/trimmomatic/0.36/adapters/NexteraPE-PE.fa:2:30:10 \
  SLIDINGWINDOW:4:15 MINLEN:36

## 2. STAR alignment to the virus reference ##
module load star/intel/2.5.3a
cd /scratch/cw2505/GhedinLab/PR8_PP1A_P2_stock_sequencing
mkdir STAR_alignment
STAR --runThreadN 10 \
	--genomeDir /scratch/cw2505/GhedinLab/references/PR8segs_ref-STAR_08012017 \
	--readFilesIn PR8_PP1A_P2_stock_R1.fastq PR8_PP1A_P2_stock_R2.fastq \
	--outFileNamePrefix STAR_alignment/PR8_PP1A_P2. \
	--outSAMtype BAM Unsorted

## 3. bam2sam conversion with samtools ##
module load samtools/intel/1.3.1
cd /scratch/cw2505/GhedinLab/PR8_PP1A_P2_stock_sequencing/STAR_alignment
samtools sort PR8_PP1A_P2.Aligned.out.bam > PR8_PP1A_P2.Aligned.out.sorted.bam
samtools index PR8_PP1A_P2.Aligned.out.sorted.bam
samtools view -h -o PR8_PP1A_P2.Aligned.out.sorted.bam.sam PR8_PP1A_P2.Aligned.out.sorted.bam

## 4. Filter the individual sam files to get rid of multi-mapper (MAPQ != 255) with a python script (map_qual_filter_forSTARoutput_IAV_sam.py) ##
module load python/intel/2.7.12
cd /scratch/cw2505/GhedinLab/PR8_PP1A_P2_stock_sequencing/STAR_alignment
python /scratch/cw2505/GhedinLab/python_scripts/map_qual_filter_forSTARoutput_IAV_sam.py \
  PR8_PP1A_P2.virus_alignment.sam \
  -od ../IAV_sam

## 5. sam2bam conversion with samtools ##
module load samtools/intel/1.3.1
cd /scratch/cw2505/GhedinLab/PR8_PP1A_P2_stock_sequencing/STAR_alignment
samtools view -b PR8_PP1A_P2.virus_alignment.sam | samtools sort -o PR8_PP1A_P2.virus_alignment.sam.sorted.bam

## 6. Obtaining the coverage for each position for each viral segment with bedtools using sorted bam file as inputs ##
module load bedtools/intel/2.26.0
cd /scratch/cw2505/GhedinLab/PR8_PP1A_P2_stock_sequencing
bedtools genomecov -d -split \
  -ibam STAR_alignment/PR8_PP1A_P2.virus_alignment.sam.sorted.bam \
  -g /scratch/cw2505/GhedinLab/references/Influenza_A_H1N1_PR8_refseq.fasta > PR8_PP1A_P2.virus.bed_genomecov.txt

## 7. bam file indexing with samtools ##
module load samtools/intel/1.6
cd /scratch/cw2505/GhedinLab/PR8_PP1A_P2_stock_sequencing/STAR_alignment
samtools index PR8_PP1A_P2.virus_alignment.sam.sorted.bam

## 8. Extracting all the cigar pattern and their frequency to account for all the possible cases for “MNM” reads with python script (extract_cigar_pattern.py) ##
module load python/intel/2.7.12
cd /scratch/cw2505/GhedinLab/PR8_PP1A_P2_stock_sequencing/IAV_sam
python /scratch/cw2505/GhedinLab/python_scripts/extract_cigar_pattern.py -indir . -o PR8_PP1A_P2_cigar_patterns_freq.txt
mv PR8_PP1A_P2_cigar_patterns_freq.txt ../

## 9. Extracting all the boundary coordinates ##
module load python/intel/2.7.12
cd /scratch/cw2505/GhedinLab/PR8_PP1A_P2_stock_sequencing
mkdir DIP_stats
python /scratch/cw2505/GhedinLab/python_scripts/extract_DIP_percentage_per-sample_from-sam_PR8-polymerases_v6_BulkRNA-PR8stock.py \
  ./IAV_sam/*.sam -cd . -m 10 -sl 1000 -p 100 -od DIP_stats

## 10. Visualization of the deletion coordinates of defective viral transcripts and calculation their relative abundance ##
# R script (together with scData #
10X-scData_3-Visualization-calculation-DVGs.Rmd

